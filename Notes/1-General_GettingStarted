to just run:
	go run appname.go

to compile and make an executable:
	go build appname.go
	./appname

This line is called a package declaration and every Go program starts with one. 
The package declaration informs the compiler whether to create an executable or library. 
The import keyword allows us to bring in and use code from other packages.
    the package name is enclosed with double quotes 

Packages serve important roles in Go. They group related code together, allow code to be reusable, and make it easier to maintain. 
We only import the packages we need. In turn, our programs run faster because it’s not bogged down by extra code/packages!

a main function is special, a file that has a package main declaration will automatically run the main function!

To import multiple packages we can add multiple import statements, 
Or we can use a single import with a pair of parentheses that contain our packages:
	Notice, when using an import with parentheses, we’re not separating each package with a comma. Instead, each package is on a different line.
	We can also provide an alias to a package by including the alias name before the file. 
		Including an alias will make it easier to refer to the package without typing out the full package name

A line comment is created using //
There are also block comments that can span multiple lines— it starts with /*, ends with a */ and envelopes everything inside (including new lines)

To look up documentation, use go doc packagename
	or go doc packagename.funcname

